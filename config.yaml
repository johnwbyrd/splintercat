# Splintercat Configuration
# Model-assisted git merge conflict resolution with build/test validation

# ==============================================================================
# SOURCE - What to merge from
# ==============================================================================
source:
  ref: heaven/main  # Git ref to merge (branch, tag, or commit)

# ==============================================================================
# TARGET - Where to merge to
# ==============================================================================
target:
  # Directory containing the local git repository sources
  workdir: /home/jbyrd/git/llvm-mos

  # Branch to merge into
  branch: stable-test

# ==============================================================================
# BUILD/TEST - Validation command
# ==============================================================================
build_test:
  # Command to run for build/test validation
  # Runs after conflict resolution to verify correctness
  # Template {target.workdir} is replaced with target.workdir value
  command: "cd {target.workdir}/build && ninja check-llvm"

  # Directory for storing build/test log files (one timestamped file per attempt)
  # Template {target.workdir} is replaced with target.workdir value
  output_dir: "{target.workdir}/.splintercat/build-logs"

  # Maximum time allowed for build/test (seconds)
  timeout: 14400  # 4 hours

# ==============================================================================
# MODEL - Language model configuration
# ==============================================================================
model:
  # OpenRouter API key (use environment variable for security)
  # Can be set via environment variable: SPLINTERCAT__MODEL__API_KEY=sk-...
  api_key: ""

  # OpenRouter API base URL
  base_url: https://openrouter.ai/api/v1

  # Model for conflict resolution (cheap/fast model recommended)
  # Resolves merge conflicts mechanically
  resolver_model: openai/gpt-4o-mini

  # Model for build log summarization (cheap/fast model recommended)
  # Extracts failure information from verbose build logs
  summarizer_model: openai/gpt-4o-mini

  # Model for strategic planning (smart/expensive model recommended)
  # Makes decisions about merge strategy and recovery
  planner_model: anthropic/claude-sonnet-4

# ==============================================================================
# GIT-IMERGE - Merge subdivision configuration
# ==============================================================================
imerge:
  # Name for this merge operation (used in git refs)
  name: llvm-upstream-merge

  # Goal determines final merge structure
  # 'merge' produces a single two-parent merge commit (recommended)
  # Other options: 'rebase', 'rebase-with-history', 'full'
  goal: merge

# ==============================================================================
# MERGE - Strategy and recovery configuration
# ==============================================================================
merge:
  # Maximum number of recovery attempts before aborting
  max_retries: 5

  # Available strategies for Planner to choose from:
  # - optimistic: resolve all conflicts, then test once (fastest, risky)
  # - batch: resolve N conflicts, test, repeat (balanced)
  # - per_conflict: resolve one, test, repeat (slowest, safest)
  strategies_available: [optimistic, batch, per_conflict]

  # Default batch size if using batch strategy
  default_batch_size: 10

# ==============================================================================
# LOGGING - Output configuration
# ==============================================================================
verbose: false  # Set to true for DEBUG level console output
interactive: false  # Set to true to prompt before each command

# ==============================================================================
# NOTES
# ==============================================================================
# - Template substitution: {target.workdir} gets replaced with target.workdir value
#
# - Environment variables can override any setting using double underscore delimiter:
#   Examples:
#     SPLINTERCAT__MODEL__API_KEY=sk-your-key-here
#     SPLINTERCAT__VERBOSE=true
#     SPLINTERCAT__MERGE__MAX_RETRIES=10
#
# - Command-line args can override settings:
#   Examples:
#     --model.planner_model=anthropic/claude-opus-4
#     --verbose=true
#     --merge.max_retries=10
#
# - See doc/DESIGN.md for complete architecture and design details
# - See doc/TODO.md for implementation roadmap