# Splintercat Configuration
# LLM-assisted git merge conflict resolution with build/test validation

config:
  # ==============================================================================
  # GIT - Repository and merge configuration
  # ==============================================================================
  git:
    # Git ref to merge from (branch, tag, or commit)
    source_ref: heaven-main

    # Directory containing the local git repository
    target_workdir: /home/jbyrd/git/llvm-mos

    # Branch to merge into
    target_branch: stable-test

    # Name for this git-imerge operation (used in git refs)
    imerge_name: llvm-upstream-merge

    # Goal determines final merge structure
    # 'merge' produces a single two-parent merge commit (recommended)
    # Other options: 'rebase', 'rebase-with-history', 'full'
    imerge_goal: merge

  # ==============================================================================
  # CHECK - Validation check configuration
  # ==============================================================================
  check:
    # Directory for storing check log files (one timestamped file per check)
    # Template {config.git.target_workdir} is replaced with actual value
    output_dir: "{config.git.target_workdir}/.splintercat/check-logs"

    # Default timeout for checks (seconds) - can be overridden per check
    default_timeout: 14400  # 4 hours

    # User-defined checks - add as many as you want with any names
    commands:
      # Quick syntax check (fast)
      quick: "cd {config.git.target_workdir}/build && ninja -n"

      # Full build and test (thorough)
      normal: "cd {config.git.target_workdir}/build && ninja check-llvm"

  # ==============================================================================
  # LLM - Language model configuration
  # ==============================================================================
  llm:
    # OpenRouter API key
    # Best practice: Set via .env file or environment variable
    # .env file: LLM__API_KEY=sk-...
    # Env var: SPLINTERCAT__CONFIG__LLM__API_KEY=sk-...
    api_key: ""  # Will be loaded from .env or environment

    # OpenRouter API base URL
    base_url: https://openrouter.ai/api/v1

    # Model for conflict resolution
    model: openrouter:x-ai/grok-code-fast-1

  # ==============================================================================
  # STRATEGY - Merge strategy and recovery configuration
  # ==============================================================================
  strategy:
    # Maximum number of recovery attempts before aborting
    max_retries: 3

    # Available strategies for Planner to choose from:
    # - optimistic: resolve all conflicts, then test once (fastest, risky)
    # - batch: resolve N conflicts, test, repeat (balanced)
    # - per_conflict: resolve one, test, repeat (slowest, safest)
    available: [optimistic, batch, per_conflict]

    # Default batch size if using batch strategy
    default_batch_size: 10

  # ==============================================================================
  # GLOBAL FLAGS
  # ==============================================================================
  verbose: false  # Set to true for DEBUG level console output
  interactive: false  # Set to true to prompt before each command

# ==============================================================================
# NOTES
# ==============================================================================
# - Template substitution: {config.git.target_workdir} gets replaced with actual value
#
# - Environment variables can override any setting using double underscore delimiter:
#   Examples:
#     SPLINTERCAT__CONFIG__LLM__API_KEY=sk-your-key-here
#     SPLINTERCAT__CONFIG__VERBOSE=true
#     SPLINTERCAT__CONFIG__STRATEGY__MAX_RETRIES=10
#
# - Command-line args can override settings:
#   Examples:
#     --config.llm.planner_model=anthropic/claude-opus-4
#     --config.verbose=true
#     --config.strategy.max_retries=10
#
# - See doc/design.md for complete architecture and design details
# - See doc/todo.md for implementation guide
