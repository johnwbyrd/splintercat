# Splintercat Configuration
# LLM-assisted git merge conflict resolution with build/test validation

config:
  # ==============================================================================
  # GIT - Repository and merge configuration
  # ==============================================================================
  git:
    # Git ref to merge from (branch, tag, or commit)
    source_ref: heaven-main

    # Directory containing the local git repository
    target_workdir: /home/jbyrd/git/llvm-mos

    # Branch to merge into
    target_branch: stable-test

    # Name for this git-imerge operation (used in git refs)
    imerge_name: llvm-upstream-merge

    # Goal determines final merge structure
    # 'merge' produces a single two-parent merge commit (recommended)
    # Other options: 'rebase', 'rebase-with-history', 'full'
    imerge_goal: merge

  # ==============================================================================
  # CHECK - Validation check configuration
  # ==============================================================================
  check:
    # Directory for storing check log files (one timestamped file per check)
    # Template {config.git.target_workdir} is replaced with actual value
    output_dir: "{config.git.target_workdir}/.splintercat/check-logs"

    # Default timeout for checks (seconds) - can be overridden per check
    default_timeout: 14400  # 4 hours

    # User-defined checks - add as many as you want with any names
    commands:
      # Quick syntax check (fast)
      quick: "cd {config.git.target_workdir}/build && ninja -n"

      # Full build and test (thorough)
      normal: "cd {config.git.target_workdir}/build && ninja check-llvm"

  # ==============================================================================
  # LLM - Language model configuration
  # ==============================================================================
  llm:
    # Model for conflict resolution.  Model name should be in Pydantic AI format,
    # which is provider:model .  See https://ai.pydantic.dev/models/ for a list 
    # of supported providers.  See your provider for a list of available models.
    # Your particular provider will probably require an API key, which you can
    # set in the environment variable for that provider (e.g. OPENAI_API_KEY).
    model: openai:qwen2.5-coder-14b-instruct
    # The API key for your provider.  You may, if you prefer, set this as an 
    # environment variable instead of in the config file.  See 
    # https://ai.pydantic.dev/models/ for information your environment variable
    # to set, if you do not want to do this here.
    # api_key: sk-or-v1-xxxxxxxxxxx
    base_url: http://localhost:8081/v1

  # ==============================================================================
  # LOGGER - Logging output configuration
  # ==============================================================================
  logger:
    # Default log level for all sinks (spew, trace, debug, info, warn, error, fatal)
    # Individual sinks can override by setting their own level
    level: trace

    # Console output (stdout/stderr)
    console:
      enabled: true
      verbose: true
      colors: auto  # auto, always, never

    # File output
    file:
      enabled: true
      path: "{log_root}/{merge_name}/splintercat.log"
      # Default format template from sinks.yaml is used if not specified
      # Uncomment to customize:
      # format_template: "{timestamp:%Y-%m-%d %H:%M:%S.%f} [{level}] {location} {message}"
      # escape_special_characters: false  # Set to true to escape \n, \r, \t in messages

    # OTLP telemetry export (SigNoz, Jaeger, etc.)
    otlp:
      enabled: true
      endpoint: http://signoz.lan:4317
      insecure: true

    # Logfire.dev cloud logging
    logfire:
      enabled: false

  # ==============================================================================
  # GLOBAL FLAGS
  # ==============================================================================
  verbose: false  # Set to true for DEBUG level console output
  interactive: false  # Set to true to prompt before each command

# ==============================================================================
# NOTES
# ==============================================================================
# - Template substitution: {config.git.target_workdir} gets replaced with actual value
#
# - Environment variables can override any setting using double underscore delimiter:
#   Examples:
#     SPLINTERCAT__CONFIG__VERBOSE=true
#     SPLINTERCAT__CONFIG__CHECK__MAX_RETRIES=10
#
# - Command-line args can override settings:
#   Examples:
#     --config.verbose=true
#     --config.check.max_retries=10
#
# - See doc/design.md for complete architecture and design details
# - See doc/todo.md for implementation guide
